version: 1.0.1.{build}
image:
  - Ubuntu
  - macOS
  - Visual Studio 2019
pull_requests:
  do_not_increment_build_number: true
clone_depth: 1
environment:
  VULKAN_VERSION: 1.2.176.1
  VULKAN_SDK: C:\VulkanSDK\1.2.176.1
  VULKAN_DOWNLOAD_URL: https://vulkan.lunarg.com/sdk/download/1.2.176.1/windows/VulkanSDK-1.2.176.1-Installer.exe?Human=true
  VCPKG_DIR: C:\Tools\vcpkg
  VCPKG_LIBS: boost-filesystem
    boost-system boost-regex boost-random
    boost-uuid boost-crc zlib
    vulkan
for:
-
  matrix:
    only:
      - image: Visual Studio 2019
  environment:
    MY_Qt6Widgets_DIR: C:\Qt\6.0.1\msvc2019_64\lib\cmake\Qt6Widgets
    QT_PATH: C:\Qt\6.0.1\msvc2019_64
    Qt6_DIR: C:\Qt\6.0.1\msvc2019_64
  init:
    - ps: Set-WinSystemLocale ru-RU
    - ps: Start-Sleep -s 5
    - ps: Restart-Computer
  install:
    - cmd: call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
    - cmd: cd %VCPKG_DIR%
    - cmd: git pull
    - cmd: call .\bootstrap-vcpkg.bat
    - cmd: vcpkg.exe --triplet x64-windows install %VCPKG_LIBS%
    - cmd: cd %APPVEYOR_BUILD_FOLDER%
    - cmd: if not exist VulkanSDK.exe curl -L --silent --show-error --output VulkanSDK.exe %VULKAN_DOWNLOAD_URL%
    - cmd: VulkanSDK.exe /S
  cache:
    - C:\Tools\vcpkg\installed
    - VulkanSDK.exe
-
  matrix:
    only:
      - image: Ubuntu
  init:
    - export CXX=g++-9 CC=gcc-9
    - export QT_PATH="$HOME/Qt/6.0.1/gcc_64"
    - export Qt6_DIR="$HOME/Qt/6.0.1/gcc_64"
    - export MY_Qt6Widgets_DIR="$HOME/Qt/6.0.1/gcc_64/lib/cmake/Qt6Widgets"
  install:
    - git clone https://github.com/microsoft/vcpkg.git ../vcpkg
    - ../vcpkg/bootstrap-vcpkg.sh
    - export VCPKG_DIR=`dirname $(pwd)/../vcpkg/vcpkg`
    - if [ ! -f VulkanSDK.tar.gz ]; then
      curl -L --silent --show-error --output VulkanSDK.tar.gz
      "https://sdk.lunarg.com/sdk/download/1.2.176.1/linux/vulkansdk-linux-x86_64-1.2.176.1.tar.gz" ;
      fi
    - tar -xf VulkanSDK.tar.gz && source ${VULKAN_VERSION}/setup-env.sh
    - ../vcpkg/vcpkg install ${VCPKG_LIBS}
  cache:
    - ./vcpkg/installed
    - VulkanSDK.tar.gz
build_script:
- ps: >-
    mkdir tool1cd

    cd tool1cd

    cmake -DCMAKE_BUILD_TYPE=Release
    -DVCPKG_TARGET_ARCHITECTURE=x64
    -DCMAKE_PREFIX_PATH="$env:QT_PATH"
    -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_DIR/scripts/buildsystems/vcpkg.cmake"
    -DQt6Widgets_DIR="$env:MY_Qt6Widgets_DIR"
    ..

    cmake --build . --target ctool1cd --config Release

    cmake --build . --target testproject --config Release

    cmake --build . --target gtool1cd --config Release

    cd ..

test_script:
- cmd: tool1cd\bin\Release\testproject.exe --reporter junit --out junit.xml
- sh: tool1cd/bin/testproject --reporter junit --out junit.xml

on_finish:
- ps: >-
    $wc = New-Object 'System.Net.WebClient'

    $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\junit.xml))

after_build:
- cmd: >-
    set PATH=%PATH%;%QT_PATH%/bin

    windeployqt --release --no-compiler-runtime --no-translations
    --no-system-d3d-compiler --no-opengl-sw --no-patchqt
    tool1cd\bin\Release\gtool1cd.exe

- cmd: >-
    xcopy COPYING tool1cd\bin\Release

    7z a -r tool1cd-%APPVEYOR_BUILD_VERSION%.zip tool1cd\bin\Release

artifacts:
- path: tool1cd\bin\Release\ctool1cd.exe
  name: ctool1cd.exe
- path: tool1cd-*.zip
  name: tool1cd.zip
deploy: false
